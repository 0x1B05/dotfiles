#!/usr/bin/env bash

# #!/bin/sh
CACHE="$HOME/.cache/lf/thumbnail.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' \
	-- "$(readlink -f "$1")" | sha256sum | awk '{print $1}'))"

image() {
    file=$1
    w=$2
    h=$3
    x=$4
    y=$5

    if [[ "$( file -Lb --mime-type "$file")" =~ ^image ]]; then
        kitty +kitten icat --silent --stdin no --transfer-mode file --place "${w}x${h}@${x}x${y}" "$file" < /dev/null > /dev/tty
        exit 1
    fi

    pistol "$file"
}

glowormdcat() {
	file="$1"
	shift
	if command -v glow > /dev/null 2>&1; then
		glow "$file"
	else
		mdcat "$file"
	fi
}

case "$(file --dereference --brief --mime-type -- "$1")" in
	image/avif) CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
		[ ! -f "$CACHE" ] && convert "$1" "$CACHE.jpg"
		image "$CACHE.jpg" "$2" "$3" "$4" "$5" "$1"
        ;;
	image/vnd.djvu)
		CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
		[ ! -f "$CACHE" ] && djvused "$1" -e 'select 1; save-page-with /dev/stdout' | convert -density 200 - "$CACHE.jpg" > /dev/null 2>&1
		image "$CACHE.jpg" "$2" "$3" "$4" "$5" "$1"
        ;;
    image/svg+xml)
        CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
        [ ! -f "$CACHE" ] && inkscape --convert-dpi-method=none -o "$CACHE.png" --export-overwrite -D --export-png-color-mode=RGBA_16 "$1"
        image "$CACHE.png" "$2" "$3" "$4" "$5" "$1"
        ;;
    image/*)
        image "$1" "$2" "$3" "$4" "$5" "$1"
        ;;
    text/html)
        lynx -width="$4" -display_charset=utf-8 -dump "$1" 
        ;;
    text/troff)
        man ./ "$1" | col -b 
        ;;
    text/* | */xml | application/json | application/x-ndjson | application/x-subrip)
        bat -p --theme ansi --terminal-width "$(($4-2))" -f "$1" 
        ;;
    audio/* | application/octet-stream)
        mediainfo "$1" || exit 1
        ;;
    video/* )
        CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
        [ ! -f "$CACHE" ] && ffmpegthumbnailer -i "$1" -o "$CACHE" -s 0
        image "$CACHE" "$2" "$3" "$4" "$5" "$1"
        ;;
	*/pdf)
		CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
		[ ! -f "$CACHE.jpg" ] && pdftoppm -jpeg -f 1 -singlefile "$1" "$CACHE"
		image "$CACHE.jpg" "$2" "$3" "$4" "$5" "$1"
		;;
	*/epub+zip|*/mobi*)
		CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
		[ ! -f "$CACHE.jpg" ] && gnome-epub-thumbnailer "$1" "$CACHE.jpg"
		image "$CACHE.jpg" "$2" "$3" "$4" "$5" "$1"
		;;
	
    application/*zip | application/x-rar-compressed | application/x-7z-compressed | application/x-tar)
    atool --list -- "$1" 
    ;;
	*opendocument*) 
        odt2txt "$1" 
        ;;
	application/pgp-encrypted) 
        gpg -d -- "$1" 
        ;;
esac
exit 0

# case "$(printf "%s\n" "$(readlink -f "$1")" | awk '{print tolower($0)}')" in
# 	*.tgz|*.tar.gz) tar tzf "$1" ;;
# 	*.tar.bz2|*.tbz2) tar tjf "$1" ;;
# 	*.tar.txz|*.txz) xz --list "$1" ;;
# 	*.tar) tar tf "$1" ;;
# 	*.zip|*.jar|*.war|*.ear|*.oxt) unzip -l "$1" ;;
# 	*.gz) gzip -l "$1" ;;
# 	*.rar) unrar l "$1" ;;
# 	*.md) glowormdcat "$1";;
# 	*.7z) 7z l "$1" ;;
# 	*.[1-8]) man "$1" | col -b ;;
# 	*.o) nm "$1";;
# 	*.torrent) transmission-show "$1" ;;
# 	*.iso) iso-info --no-header -l "$1" ;;
# 	*.odt|*.ods|*.odp|*.sxw) odt2txt "$1" ;;
# 	*.doc) catdoc "$1" ;;
# 	*.docx) docx2txt "$1" ;;
# 	*.xml|*.html) w3m -dump "$1";;
# 	*.xls|*.xlsx)
# 		ssconvert --export-type=Gnumeric_stf:stf_csv "$1" "fd://1" | batorcat --language=csv
# 		;;
# 	*.wav|*.mp3|*.flac|*.m4a|*.wma|*.ape|*.ac3|*.og[agx]|*.spx|*.opus|*.as[fx]|*.mka)
# 		exiftool "$1"
# 		;;
# 	*.pdf)
# 		[ ! -f "${CACHE}.jpg" ] && pdftoppm -jpeg -f 1 -singlefile "$1" "$CACHE"
# 		image "${CACHE}.jpg" "$2" "$3" "$4" "$5"
# 		;;
# 	*.epub)
# 		[ ! -f "$CACHE" ] && epub-thumbnailer "$1" "$CACHE" 1024
# 		image "$CACHE" "$2" "$3" "$4" "$5"
# 		;;
# 	*.cbz|*.cbr|*.cbt)
# 		[ ! -f "$CACHE" ] && comicthumb "$1" "$CACHE" 1024
# 		image "$CACHE" "$2" "$3" "$4" "$5"
# 		;;
# 	*.avi|*.mp4|*.wmv|*.dat|*.3gp|*.ogv|*.mkv|*.mpg|*.mpeg|*.vob|*.fl[icv]|*.m2v|*.mov|*.webm|*.ts|*.mts|*.m4v|*.r[am]|*.qt|*.divx)
# 		[ ! -f "${CACHE}.jpg" ] && \
# 			ffmpegthumbnailer -i "$1" -o "${CACHE}.jpg" -s 0 -q 5
# 		image "${CACHE}.jpg" "$2" "$3" "$4" "$5"
# 		;;
# 	*.bmp|*.jpg|*.jpeg|*.png|*.xpm|*.webp|*.tiff|*.gif|*.jfif|*.ico)
# 		image "$1" "$2" "$3" "$4" "$5"
# 		;;
# 	*.svg)
# 		[ ! -f "${CACHE}.jpg" ] && convert "$1" "${CACHE}.jpg"
# 		image "${CACHE}.jpg" "$2" "$3" "$4" "$5"
# 		;;
# 	*.ino) batorcat --language=cpp "$1" ;;
# 	*) file -ibL "$1" | grep -q text && batorcat "$1" || file -Lb "$1" ;;
# esac
exit 0
